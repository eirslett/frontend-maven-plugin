package com.github.eirslett.maven.plugins.frontend.lib;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class NodeTaskExecutorTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: NodeTaskExecutor */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 100 branch to line 100
   *  - conditional line 100 branch to line 101
   *  - conditional line 101 branch to line 101
   *  - conditional line 102 branch to line 102
   *  - conditional line 103 branch to line 103
   *  - conditional line 104 branch to line 104
   *  - conditional line 104 branch to line 121
   */

  @Test
  public void maskPasswordInputNotNullOutputNotNull4()
      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {

    // Arrange
    String proxyString = " \u8924\u0001\uc4bc//\'hhttp:\u081a\u0018";

    // Act
    Class<?> classUnderTest =
        Reflector.forName("com.github.eirslett.maven.plugins.frontend.lib.NodeTaskExecutor");
    Method methodUnderTest =
        classUnderTest.getDeclaredMethod("maskPassword", Reflector.forName("java.lang.String"));
    methodUnderTest.setAccessible(true);
    String retval = (String)methodUnderTest.invoke(null, proxyString);

    // Assert result
    Assert.assertEquals(" \u8924\u0001\uc4bc//\'hhttp:\u081a\u0018", retval);
  }
}
