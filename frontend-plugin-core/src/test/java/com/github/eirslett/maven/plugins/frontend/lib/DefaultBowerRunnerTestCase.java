package com.github.eirslett.maven.plugins.frontend.lib;

import com.diffblue.deeptestutils.Reflector;
import com.github.eirslett.maven.plugins.frontend.lib.ProxyConfig;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;

public class DefaultBowerRunnerTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: BowerRunner */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 19 branch to line 30
   */

  @Test
  public void buildArgumentsInputNotNullOutput0()
      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {

    // Arrange
    ProxyConfig proxyConfig = ((ProxyConfig)Reflector.getInstance(
        "com.github.eirslett.maven.plugins.frontend.lib.ProxyConfig"));
    ArrayList arrayList = new ArrayList();
    Reflector.setField(proxyConfig, "proxies", arrayList);

    // Act
    Class<?> c =
        Reflector.forName("com.github.eirslett.maven.plugins.frontend.lib.DefaultBowerRunner");
    Method m = c.getDeclaredMethod(
        "buildArguments",
        Reflector.forName("com.github.eirslett.maven.plugins.frontend.lib.ProxyConfig"));
    m.setAccessible(true);
    java.util.List<String> retval = (java.util.List<String>)m.invoke(null, proxyConfig);

    // Assert result
    ArrayList<String> arrayList1 = new ArrayList<String>();
    Assert.assertEquals(arrayList1, retval);
  }
}
