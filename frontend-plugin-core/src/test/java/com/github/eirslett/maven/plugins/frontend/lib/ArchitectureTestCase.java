package com.github.eirslett.maven.plugins.frontend.lib;

import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ArchitectureTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: Platform */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 3 branch to line 3
   */

  @Test
  public void valuesOutput5() {

    // Act
    com.github.eirslett.maven.plugins.frontend.lib.Architecture[] retval =
        com.github.eirslett.maven.plugins.frontend.lib.Architecture.values();

    // Assert result
    Assert.assertNotNull(retval);
    Assert.assertEquals(5, retval.length);
    Assert.assertNotNull(retval[0]);
    Assert.assertEquals("x86", Reflector.getInstanceField(retval[0], "name"));
    Assert.assertEquals(0, Reflector.getInstanceField(retval[0], "ordinal"));
    Assert.assertNotNull(retval[1]);
    Assert.assertEquals("x64", Reflector.getInstanceField(retval[1], "name"));
    Assert.assertEquals(1, Reflector.getInstanceField(retval[1], "ordinal"));
    Assert.assertNotNull(retval[2]);
    Assert.assertEquals("ppc64le", Reflector.getInstanceField(retval[2], "name"));
    Assert.assertEquals(2, Reflector.getInstanceField(retval[2], "ordinal"));
    Assert.assertNotNull(retval[3]);
    Assert.assertEquals("s390x", Reflector.getInstanceField(retval[3], "name"));
    Assert.assertEquals(3, Reflector.getInstanceField(retval[3], "ordinal"));
    Assert.assertNotNull(retval[4]);
    Assert.assertEquals("arm64", Reflector.getInstanceField(retval[4], "name"));
    Assert.assertEquals(4, Reflector.getInstanceField(retval[4], "ordinal"));
  }
}
