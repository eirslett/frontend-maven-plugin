package com.github.eirslett.maven.plugins.frontend.lib;

import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.Array;
import java.util.ArrayList;

public class UtilsTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: Utils */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *
   *  - conditional line 25 branch to line 25
   *  - conditional line 25 branch to line 31
   */

  @Test
  public void implodeInputNotNull0OutputNotNull() {

    // Arrange
    String separator = "";
    ArrayList<String> elements = new ArrayList<String>();

    // Act
    String retval =
        com.github.eirslett.maven.plugins.frontend.lib.Utils.implode(separator, elements);

    // Assert result
    Assert.assertEquals("", retval);
  }

  /* testedClasses: Utils */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */

  @Test
  public void mergeInput00Output0() {

    // Arrange
    ArrayList<String> first = new ArrayList<String>();
    ArrayList<String> second = new ArrayList<String>();

    // Act
    java.util.List<String> retval =
        com.github.eirslett.maven.plugins.frontend.lib.Utils.merge(first, second);

    // Assert result
    ArrayList<String> arrayList = new ArrayList<String>();
    Assert.assertEquals(arrayList, retval);
  }

  /* testedClasses: Utils */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */

  @Test
  public void normalizeInputNotNullOutputNotNull() {

    // Arrange
    String path = "";

    // Act
    String retval = com.github.eirslett.maven.plugins.frontend.lib.Utils.normalize(path);

    // Assert result
    Assert.assertEquals("", retval);
  }
}
